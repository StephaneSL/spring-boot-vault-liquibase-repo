services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  vault:
    image: vault:1.20.4
    container_name: vault-server
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    command: server -dev
    healthcheck:
      test: ["CMD-SHELL", "curl -sS --fail http://127.0.0.1:8200/v1/sys/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot-vault-app
    depends_on:
      postgres:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    ports:
      - "8080:8080"
    restart: on-failure

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    container_name: jenkins-server
    user: root
    privileged: true
    environment:
      JENKINS_OPTS: --prefix=/
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      GITHUB_REPO_URL: "https://github.com/myrepossl/spring-boot-vault-liquibase-repo.git"
    ports:
      - "9090:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - vault
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/login >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

volumes:
  postgres_data:
  jenkins_home:
